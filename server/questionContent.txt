# <section1>
from typing import List
# </section1>
# <section2>
from typing import Optional

class ListNode:
	def __init__(self, val=0, next=None):
		self.val = val
		self.next = next

class Solution:
	def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
		return [4,3,2,1]
# </section2>
# <section3>
	def linkedListToArr(self, head):
		arr = []
		while head is not None:
			arr.append(head.val)
			head = head.next
		return arr
	def makeLinkedList(self, arrS) -> Optional[ListNode]:
		if arrS == '[]':
			return None
		arr = list(map(int, arrS.strip('[]').split(',')))
		if not arr:
			return None
		head = ListNode(arr[0])
		current_node = head
		for i in range(1, len(arr)):
			new_node = ListNode(arr[i])
			current_node.next = new_node
			current_node = new_node
		return head
arrS = input()
sol = Solution()
newHead = sol.makeLinkedList(arrS)
newHead = sol.reverseList(newHead)
newArr = sol.linkedListToArr(newHead)
print(str(newArr))
# </section3>

# <section4>
[1,2,3,4]
# </section4>
# <section5>
[4, 3, 2, 1]
# </section5>
# <section6>
[1,2]
# </section6>
# <section7>
[2, 1]
# </section7>
# <section8>
[]
# </section8>
# <section9>
[]
# </section9>